int fact[N], inv[N];
void pre() {
    fact[0] = inv[0] = 1;
    for (int i = 1; i < N; i++)
        fact[i] = (fact[i - 1] * i) % mod, inv[i] = fp(fact[i], mod - 2);
}

int nCr(int n, int r) {
    if (n < r) return 0;
    if (r == 0) return 1;
    return ((fact[n] * inv[r]) % mod * inv[n - r]) % mod;
}

 
ll nPr(ll n, ll r) {
    return ((fact[n] * inv[n - r])) % mod;
}

/* nCr with gcd*/
int nCr(int n, int r) {
    r = min(r, n - r);
    int ret = 1, cur = 1;
    while (r) {
        ret *= n, cur *= r;
        int gc = gcd(ret, cur);
        ret /= gc, cur /= gc;
        n--, r--;
    }
    return ret;
}
