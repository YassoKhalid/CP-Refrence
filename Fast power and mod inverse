int fp(int n, int p) {

    if (p == 0)return 1;
    int ret = fp(n, p >> 1LL);
    ret *= ret;
    ret %= mod;
    if (p & 1)ret *= n;
    ret %= mod;
    return ret;
}

/* mod inverse*/
/// p is prime  -> ax===1%p
int modInvP(int a, int p) {
    return pow_mod(a, p - 1, p);
}


/// a, m are coprimes  -> ax===1%m
int modInvP(int a, int m) {
    return pow_mod(a, phi(m) - 1, m);
}


/* mod INv and factorials*/
ll modInv(ll n) {
    return fp(n, mod - 2);
}

